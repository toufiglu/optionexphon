summarise(Probability = mean(Response == 1))
time_5_probability_t_3_l$Block <- 3
time_5_probability_t_3_l$F0 <- "low"
# Print the resulting probability data
print(time_5_probability_t_3_l)
# add the probability of [p] responses for h and l F0 together in one table
Prob_t_h_5 <- rbind(time_5_probability_t_1_h, time_5_probability_t_2_h, time_5_probability_t_3_h)
Prob_t_h_5
Prob_t_l_5 <- rbind(time_5_probability_t_1_l, time_5_probability_t_2_l, time_5_probability_t_3_l)
Prob_t_l_5
Prob_t_5 <- rbind(Prob_t_h_5, Prob_t_l_5)
Prob_t_5
print(Prob_t_5, n=Inf)
anova_resultProb_t_5 <- aov_ez(data = Prob_t_5,
id = "Participants",
dv = "Probability",
within = c("Block", "F0"),
detailed = TRUE)
anova_resultProb_t_5
#calculate the mean difference scores for voiceless responses across high versus low F0 stimulus
BP_clean
overall_probability_p_1_h
#calculate the mean difference scores for voiceless responses across high versus low F0 stimulus
overall_probability_p_1_h
overall_probability_p_1_l
overall_probability_p_2_h
overall_probability_p_2_l
overall_probability_p_3_h
overall_probability_p_3_l
block <- 1:3
p_h <- c(overall_probability_p_1_h, overall_probability_p_2_h, overall_probability_p_3_h)
p_l <- c(overall_probability_p_1_l, overall_probability_p_2_l, overall_probability_p_3_l)
plot(block, p_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2)
lines(block, p_l, col = "red", lwd = 2)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
block <- 1:3
p_h <- c(overall_probability_p_1_h, overall_probability_p_2_h, overall_probability_p_3_h)
p_l <- c(overall_probability_p_1_l, overall_probability_p_2_l, overall_probability_p_3_l)
plot(block, p_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2)
lines(block, p_l, col = "red", lwd = 2)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
block <- 1:3
p_h <- c(overall_probability_p_1_h, overall_probability_p_2_h, overall_probability_p_3_h)
p_l <- c(overall_probability_p_1_l, overall_probability_p_2_l, overall_probability_p_3_l)
plot(block, p_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, p_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
title("Percentage of [p] Response by Block")
#########for t response
overall_probability_t_1_h
overall_probability_t_1_l
overall_probability_t_2_h
overall_probability_t_2_l
overall_probability_t_3_h
overall_probability_t_3_l
block <- 1:3
t_h <- c(overall_probability_t_1_h, overall_probability_t_2_h, overall_probability_t_3_h)
t_l <- c(overall_probability_t_1_l, overall_probability_t_2_l, overall_probability_t_3_l)
plot(block, t_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, t_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
title("Percentage of [p] Response by Block")
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 1)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
legend("bottomright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
overall_probability_t_1_h
overall_probability_t_1_l
overall_probability_t_2_h
overall_probability_t_2_l
overall_probability_t_3_h
overall_probability_t_3_l
block <- 1:3
t_h <- c(overall_probability_t_1_h, overall_probability_t_2_h, overall_probability_t_3_h)
t_l <- c(overall_probability_t_1_l, overall_probability_t_2_l, overall_probability_t_3_l)
plot(block, t_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, t_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("bottomright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
title("Percentage of [p] Response by Block")
anova_resultProb_p
png("p_all.png")
plot(anova_resultProb_p)
p_values_p_all <- anova_resultProb_p$Pr(>F)
anova_resultProb_p
#draw it in a plot
anova_resultProb_p_plot <- ggplot(data = anova_resultProb_p) +
geom_point(aes(x = rownames(anova_resultProb_p), y = "Pr(>F)")) +
labs(x = "Source", y = "p-value") +
ggtitle("ANOVA Results")
# Save the plot as an image
ggsave("anova_resultProb_p_plot.png", plot = anova_resultProb_p_plot, width = 8, height = 6)
#draw it in a plot
p_values <- anova_resultProb_p$p
png("anova_resultProb_p.png")
plot(p_values, type = "b", xlab = "Source", ylab = "p-value",
main = "[p] reponse", ylim = c(0, 1))
write.table(anova_resultProb_p, "anova_resultProb_p.txt", quote = FALSE, sep = "\t")
summary(anova_resultProb_p)
summary_main_p <- summary(anova_resultProb_p)
library(knitr)
library(kableExtra)
main_p <- kable(summary_main_p$ANOVA, format = "html") %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
# Save the ANOVA table as an image
library(webshot)
webshot(main_p, file = "main_p.png")
summary_main_p <- summary(anova_resultProb_p)
anova_resultProb_p
summary_main_p <- summary(anova_resultProb_p)
summary_main_p
kable(summary_main_p)
library(apaTables)
install.packages("apaTables")
library(apaTables)
apa_table <- apa_print(summary_main_p)
library(rcompanion)
install.packages("rcompanion")
library(rcompanion)
apa_table <- apa.aov.table(summary_main_p)
summary_main_p
anova_resultProb_p
summary_main_p
anova_resultProb_t
summary(anova_resultProb_t)
High_block1_mean
High_block2_mean
High_block3_mean
block <- 1:3
p_h <- c(overall_probability_p_1_h, overall_probability_p_2_h, overall_probability_p_3_h)
p_l <- c(overall_probability_p_1_l, overall_probability_p_2_l, overall_probability_p_3_l)
plot(block, p_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, p_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
title("Percentage of [p] Response by Block")
text(block, p_h, labels = round(p_h, 2), pos = 3)
text(block, p_l, labels = round(p_l, 2), pos = 3)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
title("Percentage of [p] Response by Block")
block <- 1:3
p_h <- c(overall_probability_p_1_h, overall_probability_p_2_h, overall_probability_p_3_h)
p_l <- c(overall_probability_p_1_l, overall_probability_p_2_l, overall_probability_p_3_l)
plot(block, p_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, p_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
text(block, p_h, labels = round(p_h, 2), pos = 3)
text(block, p_l, labels = round(p_l, 2), pos = 3)
legend("topright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
title("Percentage of [p] Response by Block")
overall_probability_p_1_l
overall_probability_p_2_l
overall_probability_p_3_l
#########for t response
overall_probability_t_1_h
overall_probability_t_2_h
overall_probability_t_3_h
#calculate the mean difference scores for voiceless responses across high versus low F0 stimulus
#for p response
overall_probability_p_1_h
overall_probability_p_2_h
overall_probability_p_3_h
t_test_high23
t_test_low23
#1,2
subset_data12 <- subset(Prob_p, Block %in% c(1, 2))
print (subset_data12, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_p_h_12 <- subset_data12[subset_data12$F0 == "high", ]
t_test_high12 <- t.test(subset_data_p_h_12$Probability ~ subset_data_p_h_12$Block, paired = TRUE)
t_test_high12
subset_data_p_l <- subset_data12[subset_data12$F0 == "low", ]
t_test_low12 <- t.test(subset_data_p_l$Probability ~ subset_data_p_l$Block, paired = TRUE)
t_test_low12
summary(t_test_low12)
pw_Prob_p_Block
summary(pw_Prob_p_Block)
#1,3
subset_data13 <- subset(Prob_p, Block %in% c(1, 3))
print (subset_data13, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_p_h_13 <- subset_data13[subset_data13$F0 == "high", ]
t_test_high13 <- t.test(subset_data_p_h_13$Probability ~ subset_data_p_h_13$Block, paired = TRUE)
t_test_high13
subset_data_p_l_13 <- subset_data13[subset_data13$F0 == "low", ]
t_test_low13 <- t.test(subset_data_p_l$Probability ~ subset_data_p_l$Block, paired = TRUE)
t_test_low13
#1,3
subset_data13 <- subset(Prob_p, Block %in% c(1, 3))
print (subset_data13, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_p_h_13 <- subset_data13[subset_data13$F0 == "high", ]
subset_data_p_l_13 <- subset_data13[subset_data13$F0 == "low", ]
t_test_low13 <- t.test(subset_data_p_l_13$Probability ~ subset_data_p_l_13$Block, paired = TRUE)
t_test_low13
t_test_low12
# Which of the two F0 levels are impacted by Blocks?
# Filter the data for Block 2 and Block 3
subset_data23 <- subset(Prob_p, Block %in% c(2, 3))
print (subset_data23, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_p_h_23 <- subset_data23[subset_data23$F0 == "high", ]
t_test_high23 <- t.test(subset_data_p_h_23$Probability ~ subset_data_p_h_23$Block, paired = TRUE)
t_test_high23
subset_data_p_l_23 <- subset_data23[subset_data23$F0 == "low", ]
t_test_low23 <- t.test(subset_data_p_l_23$Probability ~ subset_data_p_l_23$Block, paired = TRUE)
t_test_low23
# Which of the two F0 levels are impacted by Blocks?
# Filter the data for Block 2 and Block 3
subset_data23 <- subset(Prob_p, Block %in% c(2, 3))
print (subset_data23, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_p_h_23 <- subset_data23[subset_data23$F0 == "high", ]
t_test_high23 <- t.test(subset_data_p_h_23$Probability ~ subset_data_p_h_23$Block, paired = TRUE)
t_test_high23
subset_data_p_l_23 <- subset_data23[subset_data23$F0 == "low", ]
t_test_low23 <- t.test(subset_data_p_l_23$Probability ~ subset_data_p_l_23$Block, paired = TRUE)
t_test_low23
overall_probability_t_1_l
overall_probability_t_2_l
overall_probability_t_3_l
High_block1_mean_t
High_block2_mean_t
High_block3_mean_t
Low_t <- Prob_t[Prob_t$F0 == "low", ]
Low_block1_mean_t <- mean(Low_t$Probability[Low_t$Block == 1])
Low_block2_mean_t <- mean(Low_t$Probability[Low_t$Block == 2])
Low_block3_mean_t <- mean(Low_t$Probability[Low_t$Block == 3])
Low_block1_mean_t
Low_block2_mean_t
Low_block3_mean_t
#t-test
#1,2
subset_t_data12 <- subset(Prob_t, Block %in% c(1, 2))
print (subset_t_data12, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_t_h_12 <- subset_t_data12[subset_t_data12$F0 == "high", ]
t_test_t_high12 <- t.test(subset_data_t_h_12$Probability ~ subset_data_t_h_12$Block, paired = TRUE)
t_test_t_high12
#1,3
subset_t_data13 <- subset(Prob_t, Block %in% c(1, 2))
print (subset_t_data13, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_t_h_13 <- subset_t_data13[subset_t_data13$F0 == "high", ]
t_test_t_high13 <- t.test(subset_data_t_h_13$Probability ~ subset_data_t_h_13$Block, paired = TRUE)
t_test_t_high13
t_test_t_high12
#1,3
subset_t_data13 <- subset(Prob_t, Block %in% c(1, 3))
print (subset_t_data13, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_t_h_13 <- subset_t_data13[subset_t_data13$F0 == "high", ]
t_test_t_high13 <- t.test(subset_data_t_h_13$Probability ~ subset_data_t_h_13$Block, paired = TRUE)
t_test_t_high13
#2,3
subset_t_data23 <- subset(Prob_t, Block %in% c(2, 3))
print (subset_t_data23, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_t_h_23 <- subset_t_data23[subset_t_data23$F0 == "high", ]
t_test_t_high23 <- t.test(subset_data_t_h_23$Probability ~ subset_data_t_h_23$Block, paired = TRUE)
t_test_t_high23
t_test_t_high12
t_test_t_high13
t_test_t_high23
pw_Prob_p_Block
pw_Prob_p_F0
t_test_low23
# Which of the two F0 levels are impacted by Blocks?
# 2,3
subset_p_data23 <- subset(Prob_p, Block %in% c(2, 3))
print (subset_p_data23, n=Inf)
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
subset_data_p_h_23 <- subset_p_data23[subset_p_data23$F0 == "high", ]
t_test_high23 <- t.test(subset_data_p_h_23$Probability ~ subset_data_p_h_23$Block, paired = TRUE)
t_test_high23
subset_data_p_l_23 <- subset_p_data23[subset_p_data23$F0 == "low", ]
t_test_low23 <- t.test(subset_data_p_l_23$Probability ~ subset_data_p_l_23$Block, paired = TRUE)
t_test_low23
anova_resultProb_p_1
anova_resultProb_p_2
anova_resultProb_p_1
anova_resultProb_p_2
t_test_time_subset_2_p_23_high
t_test_time_subset_2_p_23_low
t_test_time_subset_2_p_13_low
time_subset_2_p_13 <- subset(Prob_p_2, Block %in% c(1, 3))
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
time_subset_2_p_13_h <- time_subset_2_p_13[time_subset_2_p_13$F0 == "high", ]
t_test_time_subset_2_p_13_high <- t.test(time_subset_2_p_13_h$Probability ~ time_subset_2_p_13_h$Block, paired = TRUE)
t_test_time_subset_2_p_13_high
time_subset_2_p_13_l <- time_subset_2_p_13[time_subset_2_p_13$F0 == "low", ]
t_test_time_subset_2_p_13_low <- t.test(time_subset_2_p_13_l$Probability ~ time_subset_2_p_13_l$Block, paired = TRUE)
t_test_time_subset_2_p_13_low
time_subset_2_p_23 <- subset(Prob_p_2, Block %in% c(2, 3))
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
time_subset_2_p_23_h <- time_subset_2_p_23[time_subset_2_p_23$F0 == "high", ]
t_test_time_subset_2_p_23_high <- t.test(time_subset_2_p_23_h$Probability ~ time_subset_2_p_23_h$Block, paired = TRUE)
t_test_time_subset_2_p_23_high
time_subset_2_p_23_l <- time_subset_2_p_23[time_subset_2_p_23$F0 == "low", ]
t_test_time_subset_2_p_23_low <- t.test(time_subset_2_p_23_l$Probability ~ time_subset_2_p_23_l$Block, paired = TRUE)
t_test_time_subset_2_p_23_low
anova_resultProb_p_3
anova_resultProb_p_4
time_subset_3_p_13 <- subset(Prob_p_3, Block %in% c(1, 3))
# Perform separate paired t-tests for each level of F0 for block 2 and 3.
time_subset_3_p_13_h <- time_subset_3_p_13[time_subset_3_p_13$F0 == "high", ]
t_test_time_subset_3_p_13_high <- t.test(time_subset_3_p_13_h$Probability ~ time_subset_3_p_13_h$Block, paired = TRUE)
t_test_time_subset_3_p_13_high
time_subset_3_p_13_l <- time_subset_3_p_13[time_subset_3_p_13$F0 == "low", ]
t_test_time_subset_3_p_13_low <- t.test(time_subset_3_p_13_l$Probability ~ time_subset_3_p_13_l$Block, paired = TRUE)
t_test_time_subset_3_p_13_low
t_test_time_subset_3_p_13_low
t_test_time_subset_3_p_23_low
t_test_time_subset_4_p_13_low
t_test_time_subset_4_p_23_low
anova_resultProb_p_5
t_test_time_subset_5_p_12_high
t_test_time_subset_5_p_12_low
t_test_time_subset_5_p_13_low
t_test_time_subset_5_p_23_low
anova_resultProb_t_1
anova_resultProb_t_2
anova_resultProb_t_3
anova_resultProb_t_4
anova_resultProb_t_5
##hypothetical situation for 3-stage hypothesis
block <- 1:3
hp1_h <- c(0.7, 0.9, 0.9)
hp1_l <- c(0.3, 0.1, 0.1)
plot(block, hp1_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, hp1_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("bottomright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
##hypothetical situation for 3-stage hypothesis
block <- 1:3
##hypothetical situation for 3-stage hypothesis
block <- 1:3
hp1_h <- c(0.7, 0.9, 0.9)
hp1_l <- c(0.3, 0.1, 0.1)
plot(block, hp1_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, hp1_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
##hypothetical situation for 3-stage hypothesis
block <- 1:3
hp1_h <- c(0.7, 0.9, 0.9)
hp1_l <- c(0.3, 0.1, 0.1)
plot(block, hp1_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of voiceless response", col = "blue", lwd = 2, xaxt = "n")
lines(block, hp1_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
title("Percentage of voiceless response by Block")
##hypothetical situation for 2-stage hypothesis
block <- 1:3
hp2_h <- c(0.7, 0.7, 0.9)
hp2_l <- c(0.3, 0.3, 0.1)
plot(block, hp2_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of voiceless response", col = "blue", lwd = 2, xaxt = "n")
lines(block, hp2_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
title("Percentage of voiceless response by Block")
##hypothetical situation for 3-stage hypothesis
Stage <- 1:3
hp1_h <- c(0.7, 0.9, 0.9)
hp1_l <- c(0.3, 0.1, 0.1)
##hypothetical situation for 3-stage hypothesis
Stage <- 1:3
hp1_h <- c(0.7, 0.9, 0.9)
hp1_l <- c(0.3, 0.1, 0.1)
plot(Stage, hp1_h, type = "l", ylim = c(0, 1), xlab = "Stage", ylab = "Percentage of voiceless response", col = "blue", lwd = 2, xaxt = "n")
lines(Stage, hp1_l, col = "red", lwd = 2)
axis(1, at = Stage, labels = Stage)
legend("bottomright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
##hypothetical situation for 3-stage hypothesis
Stage <- 1:3
hp1_h <- c(0.7, 0.9, 0.9)
hp1_l <- c(0.3, 0.1, 0.1)
plot(Stage, hp1_h, type = "l", ylim = c(0, 1), xlab = "Stage", ylab = "Percentage of voiceless response", col = "blue", lwd = 2, xaxt = "n")
lines(Stage, hp1_l, col = "red", lwd = 2)
axis(1, at = Stage, labels = Stage)
title("Percentage of voiceless response by Stage")
legend("midright", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.5)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.5)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.7)
##hypothetical situation for 2-stage hypothesis
Stage <- 1:3
hp2_h <- c(0.7, 0.7, 0.9)
hp2_l <- c(0.3, 0.3, 0.1)
plot(Stage, hp2_h, type = "l", ylim = c(0, 1), xlab = "Stage", ylab = "Percentage of voiceless response", col = "blue", lwd = 2, xaxt = "n")
lines(Stage, hp2_l, col = "red", lwd = 2)
axis(1, at = Stage, labels = Stage)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2)
title("Percentage of voiceless response by Stage")
plot1 <- ggplot(data = circles1, aes(x = VOT, y = F0)) +
geom_point(shape = 1, size = 3, color = "black") +
geom_point(data = subset(circles, VOT == 4), shape = 16, size = 3, fill = "black") +
labs(x = "VOT", y = "F0") +
scale_x_continuous(breaks = 1:7, limits = c(1, 7)) +
scale_y_continuous(limits = c(220, 300)) +
theme_bw()
circles2 <- data.frame(
VOT = c(1, 2, 2, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7),
F0 = c(230, 220, 230, 240, 230, 230, 260, 290, 290, 280, 290, 300, 290),
Shape = c("Hollow", "Hollow", "Hollow", "Hollow", "Hollow", "Solid", "Solid", "Solid", "Hollow", "Hollow", "Hollow", "Hollow", "Hollow")
)
# Create the plot with the circles and background/axis elements
plot2 <- ggplot(data = circles2, aes(x = VOT, y = F0, shape = Shape)) +
geom_point(size = 3, color = "black") +
scale_shape_manual(values = c(1, 16), guide = FALSE) +
labs(x = "VOT", y = "F0") +
scale_x_continuous(breaks = 1:7, limits = c(1, 7)) +
scale_y_continuous(limits = c(220, 300)) +
theme_bw()
plot2
circles1 <- data.frame(
VOT = c(1, 2, 2, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7),
F0 = c(250, 240, 250, 260, 250, 230, 260, 290, 270, 260, 270, 280, 280),
Shape = c("Hollow", "Hollow", "Hollow", "Hollow", "Hollow", "Solid", "Solid", "Solid", "Hollow", "Hollow", "Hollow", "Hollow", "Hollow")
)
plot1 <- ggplot(data = circles1, aes(x = VOT, y = F0)) +
geom_point(shape = 1, size = 3, color = "black") +
geom_point(data = subset(circles, VOT == 4), shape = 16, size = 3, fill = "black") +
labs(x = "VOT", y = "F0") +
scale_x_continuous(breaks = 1:7, limits = c(1, 7)) +
scale_y_continuous(limits = c(220, 300)) +
theme_bw()
circles1 <- data.frame(
VOT = c(1, 2, 2, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7),
F0 = c(250, 240, 250, 260, 250, 230, 260, 290, 270, 260, 270, 280, 280),
Shape = c("Hollow", "Hollow", "Hollow", "Hollow", "Hollow", "Solid", "Solid", "Solid", "Hollow", "Hollow", "Hollow", "Hollow", "Hollow")
)
plot1 <- ggplot(data = circles1, aes(x = VOT, y = F0)) +
geom_point(shape = 1, size = 3, color = "black") +
geom_point(data = subset(circles1, VOT == 4), shape = 16, size = 3, fill = "black") +
labs(x = "VOT", y = "F0") +
scale_x_continuous(breaks = 1:7, limits = c(1, 7)) +
scale_y_continuous(limits = c(220, 300)) +
theme_bw()
plot1
circles1 <- data.frame(
VOT = c(1, 2, 2, 2, 3, 4, 4, 4, 5, 6, 6, 6, 7),
F0 = c(250, 240, 250, 260, 250, 230, 260, 290, 270, 260, 270, 280, 270),
Shape = c("Hollow", "Hollow", "Hollow", "Hollow", "Hollow", "Solid", "Solid", "Solid", "Hollow", "Hollow", "Hollow", "Hollow", "Hollow")
)
plot1 <- ggplot(data = circles1, aes(x = VOT, y = F0)) +
geom_point(shape = 1, size = 3, color = "black") +
geom_point(data = subset(circles1, VOT == 4), shape = 16, size = 3, fill = "black") +
labs(x = "VOT", y = "F0") +
scale_x_continuous(breaks = 1:7, limits = c(1, 7)) +
scale_y_continuous(limits = c(220, 300)) +
theme_bw()
plot1
# Create a data frame for the specified circles
circles3 <- data.frame(
VOT = c(3, 4, 4, 4, 5, 4, 4, 4, 3, 4, 4, 4, 5),
F0 = c(230, 220, 230, 240, 230, 230, 260, 290, 290, 280, 290, 300, 290),
Shape = c("Hollow", "Hollow", "Hollow", "Hollow", "Hollow", "Solid", "Solid", "Solid", "Hollow", "Hollow", "Hollow", "Hollow", "Hollow")
)
# Create the plot with the circles and background/axis elements
plot3 <- ggplot(data = circles3, aes(x = VOT, y = F0, shape = Shape)) +
geom_point(size = 3, color = "black") +
scale_shape_manual(values = c(1, 16), guide = FALSE) +
labs(x = "VOT", y = "F0") +
scale_x_continuous(breaks = 1:7, limits = c(1, 7)) +
scale_y_continuous(limits = c(220, 300)) +
theme_bw()
plot3
block <- 1:3
p_h <- c(overall_probability_p_1_h, overall_probability_p_2_h, overall_probability_p_3_h)
p_l <- c(overall_probability_p_1_l, overall_probability_p_2_l, overall_probability_p_3_l)
plot(block, p_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, p_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
text(block, p_h, labels = round(p_h, 2), pos = 3)
text(block, p_l, labels = round(p_l, 2), pos = 3)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.7)
title("Percentage of [p] Response by Block")
block <- 1:3
t_h <- c(overall_probability_t_1_h, overall_probability_t_2_h, overall_probability_t_3_h)
t_l <- c(overall_probability_t_1_l, overall_probability_t_2_l, overall_probability_t_3_l)
plot(block, t_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, t_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.7)
title("Percentage of [t] Response by Block")
block <- 1:3
t_h <- c(overall_probability_t_1_h, overall_probability_t_2_h, overall_probability_t_3_h)
t_l <- c(overall_probability_t_1_l, overall_probability_t_2_l, overall_probability_t_3_l)
plot(block, t_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, t_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
text(block, t_h, labels = round(p_h, 2), pos = 3)
text(block, t_l, labels = round(p_l, 2), pos = 3)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.7)
title("Percentage of [t] Response by Block")
#########for t response
overall_probability_t_1_h
block <- 1:3
p_h <- c(overall_probability_p_1_h, overall_probability_p_2_h, overall_probability_p_3_h)
p_l <- c(overall_probability_p_1_l, overall_probability_p_2_l, overall_probability_p_3_l)
plot(block, p_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, p_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.7)
title("Percentage of [p] Response by Block")
block <- 1:3
t_h <- c(overall_probability_t_1_h, overall_probability_t_2_h, overall_probability_t_3_h)
t_l <- c(overall_probability_t_1_l, overall_probability_t_2_l, overall_probability_t_3_l)
plot(block, t_h, type = "l", ylim = c(0, 1), xlab = "Block", ylab = "Percentage of [p] response", col = "blue", lwd = 2, xaxt = "n")
lines(block, t_l, col = "red", lwd = 2)
axis(1, at = block, labels = block)
legend("right", legend = c("high F0", "low F0"), col = c("blue", "red"), lwd = 2, cex = 0.7)
title("Percentage of [t] Response by Block")
citation()
